{"version":3,"sources":["webpack:///webpack/bootstrap 2babca1f34fa67369a1c","webpack:///./src/index.js","webpack:///./src/glsl/interactive_render.vert.glsl","webpack:///./src/glsl/interactive_render.frag.glsl","webpack:///./src/glsl/interactive_depth.vert.glsl","webpack:///./src/glsl/interactive_depth.frag.glsl","webpack:///./src/glsl/interactive_normal.vert.glsl","webpack:///./src/glsl/interactive_normal.frag.glsl","webpack:///./src/glsl/interactive_test.vert.glsl","webpack:///./src/glsl/interactive_test.frag.glsl"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,kCAAkC,mBAAO,CAAC,CAAqC;AAC/E,oCAAoC,mBAAO,CAAC,CAAqC;AACjF,iCAAiC,mBAAO,CAAC,CAAoC;AAC7E,mCAAmC,mBAAO,CAAC,CAAoC;AAC/E,kCAAkC,mBAAO,CAAC,CAAqC;AAC/E,oCAAoC,mBAAO,CAAC,CAAqC;AACjF,gCAAgC,mBAAO,CAAC,CAAmC;AAC3E,kCAAkC,mBAAO,CAAC,CAAmC;;AAE7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uB;;;;;;AC7bA,4CAA4C,4BAA4B,+BAA+B,6BAA6B,yBAAyB,2BAA2B,gCAAgC,0BAA0B,6BAA6B,yBAAyB,oBAAoB,8CAA8C,gCAAgC,6CAA6C,8BAA8B,iCAAiC,yBAAyB,KAAK,C;;;;;;ACAphB,0DAA0D,0CAA0C,gCAAgC,0BAA0B,6BAA6B,yBAAyB,oBAAoB,wCAAwC,yCAAyC,qDAAqD,gCAAgC,KAAK,C;;;;;;ACAnZ,4CAA4C,6BAA6B,oBAAoB,6CAA6C,KAAK,C;;;;;;ACA/I,0DAA0D,yCAAyC,4BAA4B,wCAAwC,uCAAuC,yEAAyE,oBAAoB,KAAK,oBAAoB,gDAAgD,4CAA4C,KAAK,C;;;;;;ACAra,4CAA4C,4BAA4B,6BAA6B,0BAA0B,gBAAgB,0BAA0B,gDAAgD,KAAK,C;;;;;;ACA9N,0DAA0D,oCAAoC,gBAAgB,0DAA0D,KAAK,C;;;;;;ACA7K,4CAA4C,+BAA+B,6BAA6B,4BAA4B,gBAAgB,8CAA8C,gCAAgC,KAAK,C;;;;;;ACAvO,0DAA0D,0CAA0C,4BAA4B,gBAAgB,uDAAuD,KAAK,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2babca1f34fa67369a1c","const vertexShaderSource_render = require('./glsl/interactive_render.vert.glsl');\r\nconst fragmentShaderSource_render = require('./glsl/interactive_render.frag.glsl');\r\nconst vertexShaderSource_depth = require('./glsl/interactive_depth.vert.glsl');\r\nconst fragmentShaderSource_depth = require('./glsl/interactive_depth.frag.glsl');\r\nconst vertexShaderSource_normal = require('./glsl/interactive_normal.vert.glsl');\r\nconst fragmentShaderSource_normal = require('./glsl/interactive_normal.frag.glsl');\r\nconst vertexShaderSource_test = require('./glsl/interactive_test.vert.glsl');\r\nconst fragmentShaderSource_test = require('./glsl/interactive_test.frag.glsl');\r\n\r\nconst lightdirection = new Float32Array([-0.37904902, 0.53066863, 0.75809804]);\r\n\r\nconst views = [{\r\n\t\tleft: 0,\r\n\t\tbottom: 0.5,\r\n\t\twidth: 0.5,\r\n\t\theight: 0.5,\r\n\t\tbackground: [0.5, 0.5, 0.7, 1.0],\r\n\t\teye: [0, 0, 7],\r\n\t\ttarget: [0, 0, 0],\r\n\t\tup: [0, 1, 0],\r\n\t\tfov: 30,\r\n\t\ttitle: \"Render\"\r\n\t},\r\n\t{\r\n\t\tleft: 0.5,\r\n\t\tbottom: 0.5,\r\n\t\twidth: 0.5,\r\n\t\theight: 0.5,\r\n\t\tbackground: [0.5, 0.7, 0.5, 1.0],\r\n\t\teye: [0, 0, 7],\r\n\t\ttarget: [0, 0, 0],\r\n\t\tup: [0, 1, 0],\r\n\t\tfov: 30,\r\n\t\ttitle: \"Depth\"\r\n\t},\r\n\t{\r\n\t\tleft: 0,\r\n\t\tbottom: 0,\r\n\t\twidth: 0.5,\r\n\t\theight: 0.5,\r\n\t\tbackground: [0.7, 0.5, 0.5, 1.0],\r\n\t\teye: [0, 0, 7],\r\n\t\ttarget: [0, 0, 0],\r\n\t\tup: [0, 1, 0],\r\n\t\tfov: 30,\r\n\t\ttitle: \"Normal\"\r\n\t},\r\n\t{\r\n\t\tleft: 0.5,\r\n\t\tbottom: 0,\r\n\t\twidth: 0.5,\r\n\t\theight: 0.5,\r\n\t\tbackground: [0.0, 0.0, 0.0, 1.0],\r\n\t\teye: [0, 0, 7],\r\n\t\ttarget: [0, 0, 0],\r\n\t\tup: [0, 1, 0],\r\n\t\tfov: 30,\r\n\t\ttitle: \"TEST\"\r\n\t}\r\n];\r\n\r\nconst positions = new Float32Array([ // Vertex coordinates\r\n\t-1.0, -1.0, -1.0,\r\n\t-1.0, 1.0, -1.0,\r\n\t1.0, -1.0, -1.0,\r\n\t-1.0, 1.0, -1.0,\r\n\t1.0, 1.0, -1.0,\r\n\t1.0, -1.0, -1.0,\r\n\r\n\t-1.0, -1.0, 1.0,\r\n\t1.0, -1.0, 1.0,\r\n\t-1.0, 1.0, 1.0,\r\n\t-1.0, 1.0, 1.0,\r\n\t1.0, -1.0, 1.0,\r\n\t1.0, 1.0, 1.0,\r\n\r\n\t-1.0, 1.0, -1.0,\r\n\t-1.0, 1.0, 1.0,\r\n\t1.0, 1.0, -1.0,\r\n\t-1.0, 1.0, 1.0,\r\n\t1.0, 1.0, 1.0,\r\n\t1.0, 1.0, -1.0,\r\n\r\n\t-1.0, -1.0, -1.0,\r\n\t1.0, -1.0, -1.0,\r\n\t-1.0, -1.0, 1.0,\r\n\t-1.0, -1.0, 1.0,\r\n\t1.0, -1.0, -1.0,\r\n\t1.0, -1.0, 1.0,\r\n\r\n\t-1.0, -1.0, -1.0,\r\n\t-1.0, -1.0, 1.0,\r\n\t-1.0, 1.0, -1.0,\r\n\t-1.0, -1.0, 1.0,\r\n\t-1.0, 1.0, 1.0,\r\n\t-1.0, 1.0, -1.0,\r\n\r\n\t1.0, -1.0, -1.0,\r\n\t1.0, 1.0, -1.0,\r\n\t1.0, -1.0, 1.0,\r\n\t1.0, -1.0, 1.0,\r\n\t1.0, 1.0, -1.0,\r\n\t1.0, 1.0, 1.0\r\n]);\r\n\r\nconst normals = new Float32Array([\r\n\t0.0, 0.0, -1.0,\r\n\t0.0, 0.0, -1.0,\r\n\t0.0, 0.0, -1.0,\r\n\t0.0, 0.0, -1.0,\r\n\t0.0, 0.0, -1.0,\r\n\t0.0, 0.0, -1.0,\r\n\r\n\t0.0, 0.0, 1.0,\r\n\t0.0, 0.0, 1.0,\r\n\t0.0, 0.0, 1.0,\r\n\t0.0, 0.0, 1.0,\r\n\t0.0, 0.0, 1.0,\r\n\t0.0, 0.0, 1.0,\r\n\r\n\t0.0, 1.0, 0.0,\r\n\t0.0, 1.0, 0.0,\r\n\t0.0, 1.0, 0.0,\r\n\t0.0, 1.0, 0.0,\r\n\t0.0, 1.0, 0.0,\r\n\t0.0, 1.0, 0.0,\r\n\r\n\t0.0, -1.0, 0.0,\r\n\t0.0, -1.0, 0.0,\r\n\t0.0, -1.0, 0.0,\r\n\t0.0, -1.0, 0.0,\r\n\t0.0, -1.0, 0.0,\r\n\t0.0, -1.0, 0.0,\r\n\r\n\t-1.0, 0.0, 0.0,\r\n\t-1.0, 0.0, 0.0,\r\n\t-1.0, 0.0, 0.0,\r\n\t-1.0, 0.0, 0.0,\r\n\t-1.0, 0.0, 0.0,\r\n\t-1.0, 0.0, 0.0,\r\n\r\n\t1.0, 0.0, 0.0,\r\n\t1.0, 0.0, 0.0,\r\n\t1.0, 0.0, 0.0,\r\n\t1.0, 0.0, 0.0,\r\n\t1.0, 0.0, 0.0,\r\n\t1.0, 0.0, 0.0\r\n]);\r\n\r\nconst texCoords = new Float32Array([ // Texture coordinates\r\n\t0, 0,\r\n\t0, 1,\r\n\t1, 0,\r\n\t0, 1,\r\n\t1, 1,\r\n\t1, 0,\r\n\r\n\t0, 0,\r\n\t0, 1,\r\n\t1, 0,\r\n\t1, 0,\r\n\t0, 1,\r\n\t1, 1,\r\n\r\n\t0, 0,\r\n\t0, 1,\r\n\t1, 0,\r\n\t0, 1,\r\n\t1, 1,\r\n\t1, 0,\r\n\r\n\t0, 0,\r\n\t0, 1,\r\n\t1, 0,\r\n\t1, 0,\r\n\t0, 1,\r\n\t1, 1,\r\n\r\n\t0, 0,\r\n\t0, 1,\r\n\t1, 0,\r\n\t0, 1,\r\n\t1, 1,\r\n\t1, 0,\r\n\r\n\t0, 0,\r\n\t0, 1,\r\n\t1, 0,\r\n\t1, 0,\r\n\t0, 1,\r\n\t1, 1\r\n]);\r\n\r\n\r\nfunction onLoad() {\r\n\tvar canvas = document.getElementById(\"webglcanvas\");\r\n\tvar gl = initWebGL(canvas);\r\n\r\n\t// // Resize the canvas with the shape of the window\r\n\t// setCss(canvas);\r\n\t// window.onresize = function() {\r\n\t//  setCss(canvas);\r\n\t// }\r\n\r\n\tvar currentAngle = [0.0, 0.0, 7.0];\r\n\r\n\tinitEventHandlers(canvas, currentAngle);\r\n\r\n\t// 创建positionBuffer并缓存顶点数据\r\n\tvar positionBuffer = gl.createBuffer();\r\n\tgl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\tgl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n\r\n\t// 创建texcoordBuffer并缓存贴图顶点数据\r\n\tvar texcoordBuffer = gl.createBuffer();\r\n\tgl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\r\n\tgl.bufferData(gl.ARRAY_BUFFER, texCoords, gl.STATIC_DRAW);\r\n\r\n\t// 创建normalBuffer并缓存法向数据\r\n\tvar normalBuffer = gl.createBuffer();\r\n\tgl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n\tgl.bufferData(gl.ARRAY_BUFFER, normals, gl.STATIC_DRAW);\r\n\r\n\t// clear buffer\r\n\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n\t// 创建texture并缓存一张贴图\r\n\tvar texture = gl.createTexture();\r\n\ttexture.width = 512;\r\n\ttexture.height = 512;\r\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\r\n\tvar image = new Image();\r\n\timage.onload = function() {\r\n\t\tloadTexture(gl, texture, image);\r\n\t};\r\n\timage.src = \"./src/lib/resources/diffuse.jpg\"\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n\t// 创建targetTexture并提供后续frameBuffer使用\r\n\tvar targetTexture = gl.createTexture();\r\n\ttargetTexture.width = 512;\r\n\ttargetTexture.height = 512;\r\n\tgl.bindTexture(gl.TEXTURE_2D, targetTexture);\r\n\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,\r\n\t\ttargetTexture.width, targetTexture.height, 0,\r\n\t\tgl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\t\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n\tconst fb = gl.createFramebuffer();\r\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, targetTexture, 0);\r\n\r\n\t// 创建4个shaderProgram并组合成一个数组，导入给后续draw使用\r\n\tvar program_render = initShader(gl, vertexShaderSource_render, fragmentShaderSource_render);\r\n\tvar program_depth = initShader(gl, vertexShaderSource_depth, fragmentShaderSource_depth);\r\n\tvar program_normal = initShader(gl, vertexShaderSource_normal, fragmentShaderSource_normal);\r\n\tvar program_test = initShader(gl, vertexShaderSource_test, fragmentShaderSource_test)\r\n\r\n\tvar programs = [\r\n\t\tprogram_render, program_depth, program_normal, program_test\r\n\t];\r\n\r\n\tfunction draw() {\r\n\t\tgl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n\t\tfor (var index = 0; index < programs.length; index++) {\r\n\t\t\tvar setting = views[index];\r\n\t\t\tvar left = Math.floor(canvas.width * setting.left);\r\n\t\t\tvar bottom = Math.floor(canvas.height * setting.bottom);\r\n\t\t\tvar width = Math.floor(canvas.width * setting.height);\r\n\t\t\tvar height = Math.floor(canvas.height * setting.height);\r\n\t\t\tvar program = programs[index];\r\n\t\t\tvar title = setting.title;\r\n\r\n\t\t\tgl.useProgram(program);\r\n\t\t\tif (title == \"Render\") {\r\n\t\t\t\t{\r\n\t\t\t\t\tvar u_lightLocation = gl.getUniformLocation(program, \"u_Light\");\r\n\t\t\t\t\tgl.uniform3fv(u_lightLocation, lightdirection);\r\n\t\t\t\t}\r\n\t\t\t\tvar u_worldITLocation = gl.getUniformLocation(program, \"u_worldIT\")\r\n\t\t\t\tvar a_positionLocation = gl.getAttribLocation(program, \"a_Position\");\r\n\t\t\t\tvar a_normalLocation = gl.getAttribLocation(program, \"a_Normal\");\r\n\t\t\t\tvar a_texcoordLocation = gl.getAttribLocation(program, \"a_TextCoord\");\r\n\t\t\t\tvar u_samplerLocation = gl.getUniformLocation(program, \"u_Sampler\");\r\n\t\t\t\tvar u_mvpmatrixLocation = gl.getUniformLocation(program, \"u_MvpMatrix\");\r\n\t\t\t\tvar isWorldIT = 1;\r\n\t\t\t\tvar isPosition = 1;\r\n\t\t\t\tvar isTexCoord = 1;\r\n\t\t\t\tvar isNormal = 1;\r\n\t\t\t\tvar isSampler = 1;\r\n\t\t\t\tvar isMvpMatrix = 1;\r\n\t\t\t} else if (title == \"Depth\") {\r\n\t\t\t\tvar a_positionLocation = gl.getAttribLocation(program, \"a_Position\");\r\n\t\t\t\tvar u_mvpmatrixLocation = gl.getUniformLocation(program, \"u_MvpMatrix\");\r\n\t\t\t\tvar isWorldIT = 0;\r\n\t\t\t\tvar isPosition = 1;\r\n\t\t\t\tvar isTexCoord = 0;\r\n\t\t\t\tvar isNormal = 0;\r\n\t\t\t\tvar isSampler = 0;\r\n\t\t\t\tvar isMvpMatrix = 1;\r\n\t\t\t} else if (title == \"Normal\") {\r\n\t\t\t\tvar a_positionLocation = gl.getAttribLocation(program, \"a_Position\");\r\n\t\t\t\tvar a_normalLocation = gl.getAttribLocation(program, \"a_Normal\");\r\n\t\t\t\tvar u_mvpmatrixLocation = gl.getUniformLocation(program, \"u_MvpMatrix\");\r\n\t\t\t\tvar isWorldIT = 0;\r\n\t\t\t\tvar isPosition = 1;\r\n\t\t\t\tvar isTexCoord = 0;\r\n\t\t\t\tvar isNormal = 1;\r\n\t\t\t\tvar isSampler = 0;\r\n\t\t\t\tvar isMvpMatrix = 1;\r\n\t\t\t} else {\r\n\t\t\t\tvar a_positionLocation = gl.getAttribLocation(program, \"a_Position\");\r\n\t\t\t\tvar a_texcoordLocation = gl.getAttribLocation(program, \"a_TextCoord\");\r\n\t\t\t\tvar u_samplerLocation = gl.getUniformLocation(program, \"u_Sampler\");\r\n\t\t\t\tvar u_mvpmatrixLocation = gl.getUniformLocation(program, \"u_MvpMatrix\");\r\n\t\t\t\tvar isWorldIT = 0;\r\n\t\t\t\tvar isPosition = 1;\r\n\t\t\t\tvar isTexCoord = 1;\r\n\t\t\t\tvar isNormal = 0;\r\n\t\t\t\tvar isSampler = 1;\r\n\t\t\t\tvar isMvpMatrix = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// a_Position buffering, 所有shaderProgram均需要\r\n\t\t\tif (isPosition){\r\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\t\t\t\tvar size = 3;\r\n\t\t\t\tvar type = gl.FLOAT;\r\n\t\t\t\tvar normalize = false;\r\n\t\t\t\tvar stride = 0;\r\n\t\t\t\tvar offset = 0;\r\n\t\t\t    gl.vertexAttribPointer(\r\n\t\t\t        a_positionLocation, size, type, normalize, stride, offset);\r\n\t\t\t    gl.enableVertexAttribArray(a_positionLocation);\r\n   \t\t\t}\r\n\r\n\t\t\t// a_TextCoord buffering\r\n\t\t\tif(isTexCoord) {\r\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\r\n\t\t\t\tvar size = 2;\r\n\t\t\t\tvar type = gl.FLOAT;\r\n\t\t\t\tvar normalize = false;\r\n\t\t\t\tvar stride = 0;\r\n\t\t\t\tvar offset = 0;\r\n\t\t\t\tgl.vertexAttribPointer(\r\n\t\t\t\t\ta_texcoordLocation, size, type, normalize, stride, offset);\r\n\t\t\t\tgl.enableVertexAttribArray(a_texcoordLocation);\r\n\t\t\t}\r\n\r\n\t\t\t// a_Normal buffering\r\n\t\t\tif (isNormal) {\r\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, normalBuffer);\r\n\t\t\t\tvar size = 3;\r\n\t\t\t\tvar type = gl.FLOAT;\r\n\t\t\t\tvar normalize = false;\r\n\t\t\t\tvar stride = 0;\r\n\t\t\t\tvar offset = 0;\r\n\t\t\t\tgl.vertexAttribPointer(\r\n\t\t\t\t\ta_normalLocation, size, type, normalize, stride, offset);\r\n\t\t\t\tgl.enableVertexAttribArray(a_normalLocation);\r\n\t\t\t}\r\n\r\n\t\t\t// u_MvpMatrix buffering, 所有shaderProgram均需要\r\n\t\t\tif (isMvpMatrix) {\r\n\t\t\t\tvar viewProjectionMatrix = new Matrix4();\r\n\t\t\t\tviewProjectionMatrix.setPerspective(setting.fov, canvas.width / canvas.height, 1.0, 100.0);\r\n\t\t\t\tviewProjectionMatrix.lookAt(\r\n\t\t\t\t\tsetting.eye[0], setting.eye[1], setting.eye[2],\r\n\t\t\t\t\tsetting.target[0], setting.target[1], setting.target[2],\r\n\t\t\t\t\tsetting.up[0], setting.up[1], setting.up[2]\r\n\t\t\t\t);\r\n\t\t\t\tvar mvpMatrix = new Matrix4();\r\n\t\t\t\tmvpMatrix.set(viewProjectionMatrix);\r\n\t\t\t\tmvpMatrix.rotate(currentAngle[0], 1.0, 0.0, 0.0);\r\n\t\t\t\tmvpMatrix.rotate(currentAngle[1], 0.0, 1.0, 0.0);\r\n\t\t\t\tgl.uniformMatrix4fv(u_mvpmatrixLocation, false, mvpMatrix.elements);\r\n\t\t\t\t\r\n\t\t\t\tif (isWorldIT) {\r\n\t\t\t\t\tvar mvMatrix = new Matrix4();\r\n\t\t\t\t\tmvMatrix.rotate(currentAngle[0], 1.0, 0.0, 0.0);\r\n\t\t\t\t\tmvMatrix.rotate(currentAngle[1], 0.0, 1.0, 0.0);\r\n\t\t\t\t\tgl.uniformMatrix4fv(u_worldITLocation, false, mvMatrix.elements);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// u_Sampler buffering\r\n\t\t\tif (isSampler) {\r\n\t\t\t\tif (title == \"Render\") {\r\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\r\n\t\t\t\t\tgl.uniform1i(u_samplerLocation, 0);\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tgl.viewport(0, 0, targetTexture.width, targetTexture.height);\r\n\t\t\t\t\t\tgl.scissor(0, 0, targetTexture.width, targetTexture.height);\r\n\t\t\t\t\t\tgl.clearColor(\r\n\t\t\t\t\t\t\tsetting.background[0], setting.background[1],\r\n\t\t\t\t\t\t\tsetting.background[2], setting.background[3]);\r\n\t\t\t\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\t\t\t\t\t\tgl.drawArrays(gl.TRIANGLES, 0, 6 * 6);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\r\n\t\t\t\t\tgl.uniform1i(u_samplerLocation, 0);\r\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t\t\t}\r\n\t\t\t\telse if (title == \"TEST\") {\r\n\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, targetTexture);\r\n\t\t\t\t\tgl.uniform1i(u_samplerLocation, 0);\r\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgl.viewport(left, bottom, width, height);\r\n\t\t\tgl.scissor(left, bottom, width, height);\r\n\t\t\tgl.clearColor(\r\n\t\t\t\tsetting.background[0], setting.background[1],\r\n\t\t\t\tsetting.background[2], setting.background[3]);\r\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\t\t\tgl.enable(gl.CULL_FACE);\r\n\t\t\tgl.enable(gl.DEPTH_TEST);\r\n\t\t\tgl.enable(gl.SCISSOR_TEST);\r\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, 6 * 6);\r\n\r\n\t\t\t// gl.drawElements(gl.TRIANGLES, 36, gl.UNSIGNED_BYTE, 0);\r\n\t\t}\r\n\t}\r\n\r\n\tvar tick = function() {\r\n\t\tdraw();\r\n\t\trequestAnimationFrame(tick);\r\n\t}\r\n\ttick();\r\n}\r\n\r\n\r\nwindow.onload = onLoad;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","module.exports = \"attribute vec4 a_Position;\\r\\nattribute vec3 a_Normal;\\r\\nattribute vec2 a_TextCoord;\\r\\nuniform mat4 u_MvpMatrix;\\r\\nuniform vec3 u_Light;\\r\\nuniform mat4 u_worldIT;\\r\\n\\r\\nvarying vec2 v_TexCoord;\\r\\nvarying vec3 v_Normal;\\r\\nvarying mat4 v_MvpMatrix;\\r\\nvarying vec3 v_Light;\\r\\n\\r\\nvoid main(){\\r\\n   gl_Position = u_MvpMatrix * a_Position;\\r\\n   v_TexCoord = a_TextCoord;\\r\\n   v_Normal = mat3(u_worldIT) * a_Normal;\\r\\n   // v_Normal = a_Normal;\\r\\n   v_MvpMatrix = u_MvpMatrix;\\r\\n   v_Light = u_Light;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/glsl/interactive_render.vert.glsl\n// module id = 1\n// module chunks = 0","module.exports = \"#ifdef GL_ES\\r\\nprecision mediump float;\\r\\n#endif\\r\\nuniform sampler2D u_Sampler;\\r\\n\\r\\nvarying vec2 v_TexCoord;\\r\\nvarying vec3 v_Normal;\\r\\nvarying mat4 v_MvpMatrix;\\r\\nvarying vec3 v_Light;\\r\\n\\r\\nvoid main(){\\r\\n\\tvec3 normal = normalize(v_Normal);\\r\\n\\tfloat light = dot(normal, v_Light);\\r\\n\\tgl_FragColor = texture2D(u_Sampler,v_TexCoord);\\r\\n\\tgl_FragColor.rgb *= light;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/glsl/interactive_render.frag.glsl\n// module id = 2\n// module chunks = 0","module.exports = \"attribute vec4 a_Position;\\r\\nuniform mat4 u_MvpMatrix;\\r\\n\\r\\nvoid main(){\\r\\n\\tgl_Position = u_MvpMatrix * a_Position;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/glsl/interactive_depth.vert.glsl\n// module id = 3\n// module chunks = 0","module.exports = \"#ifdef GL_ES\\r\\nprecision mediump float;\\r\\n#endif\\r\\n\\r\\nconst float NEAR = 0.1;\\r\\nconst float FAR = 100.0;\\r\\n\\r\\nfloat scaledDepth(float depth) {\\r\\n\\tfloat scaled = depth * 2.0 - 1.0;\\r\\n\\tscaled = (2.0 * NEAR * FAR) / (FAR + NEAR - scaled * (FAR - NEAR));\\r\\n\\treturn scaled;\\r\\n}\\r\\n\\r\\nvoid main(){\\r\\n\\tfloat depth = scaledDepth(gl_FragCoord.z);\\r\\n\\tgl_FragColor = vec4(vec3(depth), 1.0);\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/glsl/interactive_depth.frag.glsl\n// module id = 4\n// module chunks = 0","module.exports = \"attribute vec4 a_Position;\\r\\nattribute vec4 a_Normal;\\r\\nuniform mat4 u_MvpMatrix;\\r\\nvarying vec4 v_Normal;\\r\\nvoid main(){\\r\\n\\tv_Normal = a_Normal;\\r\\n   \\tgl_Position = u_MvpMatrix * a_Position;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/glsl/interactive_normal.vert.glsl\n// module id = 5\n// module chunks = 0","module.exports = \"#ifdef GL_ES\\r\\nprecision mediump float;\\r\\n#endif\\r\\nvarying vec4 v_Normal;\\r\\nvoid main(){\\r\\n\\tgl_FragColor = vec4((v_Normal.xyz + 1.0) / 2.0,1.0);\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/glsl/interactive_normal.frag.glsl\n// module id = 6\n// module chunks = 0","module.exports = \"attribute vec4 a_Position;\\r\\nattribute vec2 a_TextCoord;\\r\\nuniform mat4 u_MvpMatrix;\\r\\nvarying vec2 v_TexCoord;\\r\\nvoid main(){\\r\\n   gl_Position = u_MvpMatrix * a_Position;\\r\\n   v_TexCoord = a_TextCoord;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/glsl/interactive_test.vert.glsl\n// module id = 7\n// module chunks = 0","module.exports = \"#ifdef GL_ES\\r\\nprecision mediump float;\\r\\n#endif\\r\\nuniform sampler2D u_Sampler;\\r\\nvarying vec2 v_TexCoord;\\r\\nvoid main(){\\r\\n    gl_FragColor = texture2D(u_Sampler,v_TexCoord);\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/glsl/interactive_test.frag.glsl\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}